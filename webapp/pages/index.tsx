import { ConnectButton } from "@rainbow-me/rainbowkit"
import type { NextPage } from "next"
import Head from "next/head"
import { Flex, Box, Text, Button } from "@chakra-ui/react"

import Card from "../theme/Card"
import Currency from "../components/Currency"
import { ArrowDownIcon } from "@chakra-ui/icons"
import Footer from "../components/Footer"
import { useEffect, useState } from "react"
import { reverse } from "dns"

export interface Token {
  name: string
  value: number
}

const tokens = [
  { name: "ETH", value: 1564 },
  { name: "USDC", value: 1 },
]

const Home: NextPage = () => {
  const [token1, setToken1] = useState(tokens[0])
  const [token2, setToken2] = useState(tokens[1])

  const [amount1, setAmount1] = useState(0)
  const [amount2, setAmount2] = useState(0)

  const inverse = () => {
    setToken1(token2)
    setAmount1(amount2)
    setToken2(token1)
    setAmount2(amount1)
  }

  useEffect(() => {
    const amount2 =
      Math.round(((token1.value * amount1) / token2.value) * 10000) / 10000
    setAmount2(amount2)
  }, [token1, amount1, token2])

  return (
    <>
      <Box
        background="url('bg2.jpg') center"
        backgroundSize="cover"
        minH="100vh"
        minW="100vw"
        position="absolute"
      >
        <Head>
          <title>RainbowKit App</title>
          <meta
            name="description"
            content="Generated by @rainbow-me/create-rainbowkit"
          />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <Flex justifyContent="space-between" m={3}>
          <img src="Full Logo.svg" width={200} />
          <ConnectButton />
        </Flex>

        <Box
          p={4}
          display="flex"
          justifyContent="center"
          alignContent="center"
          w="100vw"
          h="100vh"
          as="main"
        >
          <Card variant="primary" maxW="460" margin="auto">
            <Text fontWeight="bold" mb={2}>
              Swap
            </Text>

            <Currency
              tokens={tokens}
              selected={token1}
              amount={amount1}
              changeSelected={e => setToken1(e)}
              changeAmount={e => setAmount1(e)}
            />
            <Box
              m={2}
              borderRadius="md"
              background="white"
              padding=".25rem .5rem"
              display="inline-block"
              cursor="pointer"
              onClick={inverse}
            >
              <ArrowDownIcon />
            </Box>
            <Currency
              tokens={tokens}
              selected={token2}
              amount={amount2}
              changeSelected={e => setToken2(e)}
              changeAmount={() => 0}
            />

            <Button variant="primary" mt={4} size="lg" width="100%">
              Swap
            </Button>
          </Card>
        </Box>

        <Footer />
      </Box>
    </>
  )
}

export default Home
